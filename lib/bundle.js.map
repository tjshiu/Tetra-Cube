{"version":3,"sources":["webpack:///webpack/bootstrap 6ee6f47b38a61ee9fb2e","webpack:///./lib/tetrisBattle.js","webpack:///./lib/tetris.js","webpack:///./lib/player.js","webpack:///./lib/board.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;;;;;;;;;;ACzHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;AC3CD;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA,qBAAqB,gBAAgB;AACrC,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,OAAO;AAC1D,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6ee6f47b38a61ee9fb2e","//updating the board\nlet prevTime = 0;\n\n\nclass GameView {\n  constructor(canvas, ctx, player) {\n    this.canvas = canvas;\n    this.player = player;\n    this.player.gameView = this;\n    this.ctx = ctx;\n    this.ctx.scale(30, 30);\n    this.board = player.board;\n    this.update = this.update.bind(this);\n    this.colors = [\n      null,\n      '#DB221C',\n      '#FF7530',\n      '#D6D600',\n      '#0EB532',\n      '#0F4AC1',\n      '#910B8C',\n      '#0D8BA8',\n    ]; //red, orange, yellow, green, blue, green, purple, otherblue\n  }\n\n  start() {\n    this.player.reset();\n    this.player.score = 0;\n    this.player.lines = 0;\n    this.update();\n  }\n\n\n\n  //Tetris players\n\n\n    createplayer(type) {\n      switch (type) {\n        case \"T\":\n        return  [\n          [0, 0, 0],\n          [1, 1, 1],\n          [0, 1, 0] ,\n        ];\n        case \"O\":\n        return [\n          [2, 2],\n          [2, 2]\n        ];\n        case \"L\":\n        return [\n          [0, 3, 0],\n          [0, 3, 0],\n          [0, 3, 3] ,\n        ];\n        case \"J\":\n        return [\n          [0, 7, 0],\n          [0, 7, 0],\n          [7, 7, 0] ,\n        ];\n        case \"I\":\n        return [\n          [0, 4, 0, 0],\n          [0, 4, 0, 0],\n          [0, 4, 0, 0] ,\n          [0, 4, 0, 0]\n        ];\n        case \"S\":\n        return [\n          [0, 5, 5],\n          [5, 5, 0],\n          [0, 0, 0] ,\n        ];\n        case \"Z\":\n        return [\n          [6, 6, 0],\n          [0, 6, 6],\n          [0, 0, 0] ,\n        ];\n      }\n    }\n\n    draw() {\n      this.ctx.fillStyle = '#202328';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawMatrix(this.board.matrix, {x: 0, y: 0});\n      this.drawMatrix(this.player.matrix, this.player.pos);\n    }\n\n    drawMatrix(matrix, offset) {\n      matrix.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            this.ctx.fillStyle = this.colors[value];\n            this.ctx.fillRect(x + offset.x,\n              y + offset.y,\n              1, 1);\n              this.ctx.lineWidth = 1/20;\n              this.ctx.strokeStyle = \"white\";\n              this.ctx.strokeRect(x + offset.x,\n                y + offset.y,\n                1, 1);\n                // context.fill();\n              }\n            });\n          });\n        }\n        update(time = 0) {\n          const timeDiff = time - prevTime;\n          prevTime = time;\n          this.player.update(timeDiff);\n          this.draw();\n          requestAnimationFrame(this.update);\n        }\n\n\n      }\n\n\n      export default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tetrisBattle.js\n// module id = 0\n// module chunks = 0","import GameView from \"./tetrisBattle.js\";\nimport Player from './player.js';\nimport Board from './board.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"tetris\");\n  const ctx = canvasEl.getContext(\"2d\");\n  const board = new Board(12, 20);\n  const player = new Player(board);\n  let Game = new GameView(canvasEl, ctx, player);\n  Game.draw();\n  document.getElementById(\"start-button\").addEventListener(\"click\", function() {\n    Game.board.clear();\n    Game.start();\n    player.pause = false;\n  });\n\n  document.getElementById(\"pause-button\").addEventListener(\"click\", () => {\n    player.pause = !player.pause;\n  });\n\n  document.addEventListener(\"keydown\", (event) => {\n    if (event.code === \"KeyP\") {\n      player.pause = !player.pause;\n    }\n    if (!player.pause) {\n      if (event.code === \"ArrowLeft\") {\n        player.move(-1);\n      } else if (event.code === \"ArrowRight\") {\n        player.move(1);\n      } else if (event.code === \"ArrowDown\") {\n        player.drop();\n      } else if (event.code === \"KeyA\") {\n        player.rotate(1);\n      } else if (event.code === \"KeyS\") {\n        player.rotate(-1);\n      } else if (event.code === \"ArrowUp\") {\n        player.rotate(1);\n      } else if (event.code === \"Space\") {\n        player.completeDrop();\n      }\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tetris.js\n// module id = 1\n// module chunks = 0","import GameView from './tetrisBattle.js';\n\nclass Player {\n    constructor(board) {\n            this.pos = {x: 0, y: 0};\n            this.matrix = [];\n            this.score =  0;\n            this.lines = 0;\n            this.board = board;\n            this.elapsedTime = 0;\n            this.timeInterval = 800;\n            this.gameView = null;\n            this.board.player = this;\n            this.pause = false;\n    }\n\n    move(dir) {\n        this.pos.x += dir;\n        if (this.board.collides(this)) {\n          this.pos.x -= dir;\n        }\n    }\n\n    reset() {\n        const pieces = \"LJOTSZI\";\n        this.matrix = this.gameView.createplayer(pieces[pieces.length * Math.random() | 0]);\n        this.pos.y = 0;\n        this.pos.x = (this.board.matrix[0].length / 2 | 0) - (this.matrix[0].length / 2 | 0);\n        if (this.board.collides(this)) {\n            this.board.clear();\n            // alert(\"gameover\")\n            this.score = 0;\n            this.lines = 0;\n            this.updateScore();\n        }\n      }\n\n    rotate(dir) {\n        const pos = this.pos.x;\n        let offset = 1;\n        this._rotateMatrix(this.matrix, dir);\n        while (this.board.collides(this)) {\n          this.pos.x += offset;\n          offset = -(offset + (offset > 0 ? 1 : -1));\n          if (offset > this.matrix[0].length) {\n            this._rotateMatrix(this.matrix, -dir);\n            this.pos.x = pos;\n            return;\n          }\n        }\n    }\n\n    _rotateMatrix(playMatrix, dir) {\n        for (let y = 0; y < playMatrix.length; y++ ) {\n          for (let x = 0; x < y; x++) {\n            [playMatrix[x][y], playMatrix[y][x]] = [playMatrix[y][x], playMatrix[x][y]];\n          }\n        }\n        if (dir > 0) {\n          playMatrix.forEach(row => row.reverse());\n        } else {\n          playMatrix.reverse();\n        }\n      }\n\n    drop() {\n        this.pos.y += 1;\n        let arena = this.board.matrix;\n        if (this.board.collides(this)) {\n          this.pos.y--;\n          this.board.merge(this);\n          this.reset();\n          this.board.sweep();\n          this.updateScore();\n        }\n        this.elapsedTime = 0;\n      }\n    completeDrop() {\n        while(!this.board.collides(this)) {\n            this.pos.y += 1;\n        }\n        this.pos.y--;\n        this.board.merge(this);\n        this.reset();\n        this.board.sweep();\n        this.updateScore();\n        this.elapsedTime = 0;\n    }\n\n    update(deltaTime) {\n        this.elapsedTime += deltaTime;\n        if (this.elapsedTime > this.timeInterval && !this.pause) {\n            this.drop();\n        }\n    }\n\n    updateScore() {\n      document.getElementById('score').innerText = this.score;\n      document.getElementById('lines').innerText = this.lines;\n    }\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 2\n// module chunks = 0","class Board {\n    constructor(x, y) {\n        let emptyBoard = [];\n\n        while (y > 0) {\n            y--;\n            emptyBoard.push(new Array(x).fill(0, 0, x));\n        }\n\n        this.matrix = emptyBoard;\n        this.player = null;\n    }\n\n    clear() {\n        this.matrix.forEach(row => row.fill(0));\n    }\n\n    merge(pieces) {\n        pieces.matrix.forEach((row, y) => {\n          row.forEach((value, x) => {\n            if (value !== 0) {\n              this.matrix[y + pieces.pos.y][x + pieces.pos.x] = value;\n            }\n          });\n        });\n      }\n\n    collides(player) {\n    const [mat, position] = [player.matrix, player.pos];\n      for (let y = 0; y < mat.length; y++) {\n          for (let x = 0; x < mat[y].length; x++) {\n            if (mat[y][x] !== 0 && (this.matrix[y + position.y] &&\n                this.matrix[y + position.y][x + position.x]) !== 0) {\n                return true;\n            }\n          }\n      }\n      return false;\n    }\n\n    sweep() {\n        let rowCount = 1;\n        outer: for (let y = this.matrix.length - 1; y > 0; y--) {\n          for (let x = 0; x < this.matrix[y].length; x++) {\n            if (this.matrix[y][x] === 0) {\n              continue outer;\n            }\n          }\n          const row = this.matrix.splice(y, 1)[0].fill(0);\n          this.matrix.unshift(row);\n          y++;\n          this.player.lines += 1;\n          this.player.score += rowCount * 10;\n          rowCount *= 2;\n        }\n      }\n\n\n}\n\nexport default Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}